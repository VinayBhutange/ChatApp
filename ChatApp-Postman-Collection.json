{
  "info": {
    "name": "Chat Application API",
    "description": "Complete API testing collection for the Chat Application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8082"
    },
    {
      "key": "auth_token",
      "value": ""
    },
    {
      "key": "user_id",
      "value": ""
    },
    {
      "key": "room_id",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "1. Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/",
          "host": ["{{base_url}}"],
          "path": [""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Server is running\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "2. Register User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser1\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/register",
          "host": ["{{base_url}}"],
          "path": ["api", "register"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"User registration successful\", function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response.message).to.include(\"successfully\");",
              "    if (response.user && response.user.id) {",
              "        pm.environment.set(\"user_id\", response.user.id);",
              "    }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "3. Login User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser1\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/login",
          "host": ["{{base_url}}"],
          "path": ["api", "login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Login successful\", function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response.token).to.exist;",
              "    pm.environment.set(\"auth_token\", response.token);",
              "    if (response.user && response.user.id) {",
              "        pm.environment.set(\"user_id\", response.user.id);",
              "    }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "4. Create Room",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{auth_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Test Room\",\n  \"roomType\": \"public\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/rooms/create",
          "host": ["{{base_url}}"],
          "path": ["api", "rooms", "create"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Room creation successful\", function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response.room.id).to.exist;",
              "    pm.environment.set(\"room_id\", response.room.id);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "5. List Rooms",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{auth_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/rooms",
          "host": ["{{base_url}}"],
          "path": ["api", "rooms"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Rooms listed successfully\", function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response.rooms).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "6. Register Second User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser2\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/register",
          "host": ["{{base_url}}"],
          "path": ["api", "register"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Second user registration successful\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Error Tests",
      "item": [
        {
          "name": "Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser1\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/login",
              "host": ["{{base_url}}"],
              "path": ["api", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Invalid login rejected\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Duplicate Username",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser1\",\n  \"password\": \"differentpassword\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/register",
              "host": ["{{base_url}}"],
              "path": ["api", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Duplicate username rejected\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Unauthorized Room Creation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Unauthorized Room\",\n  \"roomType\": \"public\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/rooms/create",
              "host": ["{{base_url}}"],
              "path": ["api", "rooms", "create"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Unauthorized request rejected\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
