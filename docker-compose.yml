version: '3.8'

services:
  # Backend service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=chatapp
      - JWT_SECRET=your-256-bit-secret-key-change-this-in-production
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chatapp-network

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=chatapp
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chatapp-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - chatapp-network

networks:
  chatapp-network:
    driver: bridge

volumes:
  postgres-data:
